
// Container that holds all the progress slider elements
.video-js .vjs-progress-control {
  position: absolute;
  top: $rail-heights * -8; // Increase the transparent hover area
  left: 0;
  width: 100%;
  height: $rail-heights * 8;
  background-color: transparent; // #ffff00 for debug
  @include transition(all 0.5s);
  // Increase height of progress bar on hover
  &:hover {
    .vjs-progress-holder {
      top: $rail-heights * 4;
      height: $rail-heights * 4;
      @include transition(all 0.5s);    
    }
    // Also scale size of drag handle see .vjs-play-progress (below)
    .vjs-play-progress:before {
      top: $rail-heights * -1; // bar vertical center - handle radius
      right: $rail-heights * -3; // handle radius
      height: $rail-heights * 6;
      width: $rail-heights * 6;
      @include transition(all 0.5s);
    }
  }
}

.vjs-live .vjs-progress-control {
  display: none;
}

// Box containing play and load progresses. Also acts as seek scrubber.
// For size and position see also .vjs-slider in _slider.scss partial
.video-js .vjs-progress-holder {
  // @include flex(auto);
  outline: 0;
  position: relative;
  top: $rail-heights * 7; // See height of container .vjs-progress-control in _progress.scss partial
  height: $rail-heights;
  cursor: pointer;
  padding: 0;
  margin: 0;
  @include background-color-with-alpha($primary-background-color, 0.8);
  @include transition(all 0.5s);
}

.video-js .vjs-progress-control:hover .vjs-progress-holder {
  // font-size: 1rem
  @include transition(all 0.5s);
}

/* If we let the font size grow as much as everything else, the current time tooltip ends up
 ginormous. If you'd like to enable the current time tooltip all the time, this should be disabled
 to avoid a weird hitch when you roll off the hover. */

// Current time tooltip 
.video-js .vjs-progress-control:hover .vjs-mouse-display:after,
.video-js .vjs-progress-control:hover .vjs-play-progress:after {
  display: none;
  // font-size: 1rem;
}

// Progress Bars
.video-js .vjs-progress-holder .vjs-play-progress,
.video-js .vjs-progress-holder .vjs-load-progress,
.video-js .vjs-progress-holder .vjs-load-progress div {
  position: absolute;
  display: block;
  height: 100%;
  margin: 0;
  padding: 0;
  // updated by javascript during playback
  width: 0;
  // Needed for IE6
  left: 0;
  top: 0;
}

.video-js .vjs-mouse-display {
  // @extend .vjs-icon-circle;
  display: none;
  &:before {
    display: none;
  }
}

.video-js .vjs-play-progress {
  height: 100%;
  background-color: $accent-color;
  // Progress handle
  &:before {
    content:"";
    position: absolute;
    top: $rail-heights * 0.5; // Half closed progress bar height  
    right: $rail-heights * 0;
    width: $rail-heights * 0;
    height: $rail-heights * 0;
    background-color: inherit;
    @include border-radius(50%);
    @include box-shadow(0 0 4px rgba(0,0,0,0.4));
    @include transition(all 0.5s);
  }
}

// Current Time "tooltip"
// By default this is hidden and only shown when hovering over the progress control
.video-js .vjs-mouse-display:after,
.video-js .vjs-play-progress:after {
  display: none;
  position: absolute;
  top: -3.4em;
  right: -1.5em;
  font-size: 0.9em;
  color: #000;
  content: attr(data-current-time);
  padding: 6px 8px 8px 8px;
  @include background-color-with-alpha(#fff, 0.8);
  @include border-radius(0.3em);
}
.video-js .vjs-play-progress:before,
.video-js .vjs-play-progress:after {
  z-index: 1;
}

.video-js .vjs-load-progress {
  // For IE8 we'll lighten the color
  // background: lighten($secondary-background-color, 25%);
  // Otherwise we'll rely on stacked opacities
  // background: rgba($secondary-background-color, $secondary-background-transparency);
  background-color: $slider-rail-color;
  height: 100%;
}

// there are child elements of the load progress bar that represent the
// specific time ranges that have been buffered
.video-js .vjs-load-progress div {
  // For IE8 we'll lighten the color
  background: lighten($secondary-background-color, 50%);
  // Otherwise we'll rely on stacked opacities
  background: rgba($secondary-background-color, 0.75);
}

.video-js.vjs-no-flex .vjs-progress-control {
  width: auto;
}

.video-js .vjs-progress-control .vjs-mouse-display {
  display: none;
  position: absolute;
  width: 1px;
  height: 100%;
  background-color: #000;
  z-index: 1;
}
.vjs-no-flex .vjs-progress-control .vjs-mouse-display {
  z-index: 0;
}
.video-js .vjs-progress-control:hover .vjs-mouse-display {
  display: block;
}
.video-js.vjs-user-inactive .vjs-progress-control .vjs-mouse-display,
.video-js.vjs-user-inactive .vjs-progress-control .vjs-mouse-display:after {
  visibility: hidden;
  opacity: 0;
  $trans: visibility 1.0s, opacity 1.0s;
  @include transition($trans);
}
.video-js.vjs-user-inactive.vjs-no-flex .vjs-progress-control .vjs-mouse-display,
.video-js.vjs-user-inactive.vjs-no-flex .vjs-progress-control .vjs-mouse-display:after {
  display: none;
}
.video-js .vjs-progress-control .vjs-mouse-display:after {
  color: #fff;
  @include background-color-with-alpha(#000, 0.8);
}
