<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>VideoJS Plugin Example</title>

    <style>
      html {
        width: 100%;
        height: 100%;
        font-family: consolas;
        font-size: 10px;
        background-color:#e5e5e5;
      }
      body {
        margin: 0;
      }
      video {
        margin: 0;
      }
      div.instructions {
        color: #999;
        padding: 10px;
        margin-bottom: 20px;
        font-size: 1.2rem;
        line-height: 1.5;
      }
      pre {
        font-family: inherit;
      }
    </style>

    <!-- Load the css files -->
    <link href="../build/temp/video-js.css" rel="stylesheet" type="text/css">

    <!-- Prevent VideoJS from injecting Header styles -->
    <script>window.VIDEOJS_NO_DYNAMIC_STYLE = true</script>

    <!-- Load VideoJS Javascript files -->
    <script src="../dist/video.js"></script>

</head>
<body>

  <video id="videoJSElement" class="video-js vjs-16-9 vjs-big-play-centered" poster="poster.jpg">
    <source src="https://archive.org/download/ElephantsDream/ed_hd.mp4" type="video/mp4">
    <source src="https://archive.org/download/ElephantsDream/ed_hd.ogv" type="video/ogv">
    <p>Video Playback Not Supported</p>
  </video>

  <div class="instructions">
    <p>This page shows you how to create, register and initialize a Video.js plugin.</p>
    <p>Open the console to view the buffered percentage.</p>
  </div>

  <script>
    var player = videojs('videoJSElement', {

      // Native HTML5 options
      'autoplay': false,
      'controls': true,
      'loop': false,
      'muted': false,
      'preload': 'auto',

      // Non-native HTML5 options
      'controlBar': {
        'audioTrackButton': true,
        'chaptersButton': true, // Visibility is dependent on nativeTextTracks value
        'currentTimeDisplay': true,
        'customControlSpacer': true,
        'descriptionsButton': true, // Visibility is dependent on nativeTextTracks value
        'durationDisplay': true,
        'liveDisplay': true,
        'muteToggle': false,
        'playbackRateMenuButton': true,
        'playToggle': true,
        'progressControl': true,
        'remainingTimeDisplay': true,
        'subsCapsButton': true, // Visibility is dependent on nativeTextTracks value
        'timeDivider': true,
        'volumePanel': true,
      },
      // 'fluid': true, // Fluid has a black border with mpeg-dash, use vjs-16-9 class in video tag instead
      'html5': {
        nativeTextTracks: false, // N.B. Can affect visibility of individual controlBar items
        nativeControlsForTouch: false, // Overides VideoJS Neue theme with OS controls on touch devices
        nativeAudioTracks: false,
        nativeVideoTracks: false,
      },
      'playbackRates': [0.5, 1, 1.5, 2],
    },
    function() {
      // this.createModal('foo');
      // Callback
      //
      // Plugin starts here
      (function() {
        var vid1, progressed;

        // create a really simple plugin
        // this one just logs the buffered percentage to the console whenever
        // more data is downloaded
        progressed = function(options) {
          this.on('progress', function(e) {
            console.log(this.bufferedPercent());
          });
        };

        // register the plugin
        videojs.registerPlugin('progressed', progressed);

        // initialize it
        vid1 = videojs('videoJSElement');
        vid1.progressed();
      })();
      // Plugin ends here

    });
  </script>

</body>
</html>
